{"version":3,"sources":["components/Boxes/index.jsx","components/Footer/index.jsx","components/Header/index.jsx","components/ImageCard/index.jsx","components/Main/index.jsx","container/Dashboard/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Boxes","className","classnames","Footer","Header","id","proptypes","url","PropTyes","string","isRequired","ImageCard","src","Main","Dashboard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iaAeeA,G,MAPD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACZ,OACI,yBAAKA,UAAWC,IAAW,aAAC,OAAS,GAAMD,EAAYA,QCehDE,EApBA,WAEX,OACI,yBAAKF,UAAU,UACX,yBAAKA,UAAU,gBACX,2BAAG,kBAAC,EAAD,OACH,2BAAG,kBAAC,EAAD,CAAOA,UAAU,sBACpB,2BAAG,kBAAC,EAAD,OACH,2BAAG,kBAAC,EAAD,OACH,2BAAG,kBAAC,EAAD,QAEP,yBAAKA,UAAU,iBACX,qCACA,sCACA,kBAAC,IAAD,S,yBCGDG,EAlBA,WACX,OACI,yBAAKH,UAAU,UACP,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,sBACf,0CAEJ,yBAAKA,UAAU,yBAAyBI,GAAG,OACvC,mCACA,yCACA,oCACA,sCACA,2BAAG,kBAAC,IAAD,CAAUA,GAAG,a,qBCZ9BC,EAAY,CACdC,I,OAAKC,EAASC,OAAOC,YAGnBC,EAAY,SAAC,GAAW,IAAVJ,EAAS,EAATA,IAChB,OACI,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,uBAAuBW,IAAKL,MAKvDI,EAAUH,SAAWF,EACNK,Q,iBCgBAE,EA5BF,WACT,OACI,yBAAKZ,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,2BACX,mCACA,yBAAKA,UAAU,gCACX,mCACA,wCAEJ,0BAAMA,UAAY,oBACd,kBAAC,IAAD,MACA,4CAIZ,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAAWM,IAAI,oFACf,kBAAC,EAAD,CAAWA,IAAI,kFACf,kBAAC,EAAD,CAAWA,IAAI,oFACf,kBAAC,EAAD,CAAWA,IAAI,qFACf,kBAAC,EAAD,CAAWA,IAAI,6EACf,kBAAC,EAAD,CAAWA,IAAI,uFCXhBO,G,MAVG,WAChB,OACE,yBAAKb,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCCOc,MARf,WACE,OACE,yBAAKd,UAAU,OACX,kBAAC,EAAD,QCKYe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8129e294.chunk.js","sourcesContent":["import classnames from 'classnames';\r\nimport  React from  'react'\r\nimport './boxes.css';\r\n\r\nconst defaultProps = {\r\n    className:\"\"\r\n}\r\n\r\nconst Boxes = ({className}) => {\r\n    return(\r\n        <div className={classnames({\"boxes\": true,[className]: className})}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Boxes;","import  React from  'react'\r\nimport './footer.css';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport Boxes from '../Boxes'\r\n\r\nconst Footer = () =>\r\n{\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"footer__left\">\r\n                <p><Boxes/></p>\r\n                <p><Boxes className=\"boxes--backround\"/></p>\r\n                <p><Boxes/></p>\r\n                <p><Boxes/></p>\r\n                <p><Boxes/></p>\r\n            </div>\r\n            <div className=\"footer__right\">\r\n                <p>03/06 </p>\r\n                <p>-------</p>\r\n                <KeyboardArrowRightIcon/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './header.css';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n                <div className=\"header__left-contents\">\n                    <div className=\"header__home-icon\"></div>\n                    <p>Architects</p>\n                </div>\n                <div className=\"header__right-contents\" id=\"box\">\n                    <p>Home</p>\n                    <p>Collection</p>\n                    <p>About</p>\n                    <p>Contact</p>\n                    <p><MenuIcon id=\"menu\"/></p>\n                </div>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './imagecard.css';\nimport PropTyes from 'prop-types';\n\nconst proptypes = {\n    url: PropTyes.string.isRequired\n}\n\nconst ImageCard = ({url}) => {\n    return (\n        <div className=\"image-wrapper\"> \n            <img className=\"image-wrapper__image\" src={url}/>\n        </div>\n    )\n}\n\nImageCard.PropTyes = proptypes;\nexport default ImageCard;","import React from 'react';\nimport './main.css';\nimport ImageCard from '../ImageCard';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nconst Main = () => {\n    return (\n        <div className=\"main\">\n            <div className=\"main__heading\">\n                <div className=\"main__heading--contents\">\n                    <h4>02.</h4>\n                    <div className=\"main__heading--Dark-interior\">\n                        <p>Dark</p>\n                        <p>Interior</p>\n                    </div>\n                    <span className = \"main__learn-more\">\n                        <ArrowRightAltIcon/>\n                        <p>learn more</p>\n                    </span>\n                </div>\n            </div>\n            <div className=\"main-slides\">\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/homepage-living_orig.png\"/>\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/fire-homepage_orig.png\"/>\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/dining-homepage_orig.png\"/>\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/homepage-bedroom_orig.png\"/>\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/img-1413_orig.jpg\"/>\n                <ImageCard url=\"https://www.homenumber33.com/uploads/1/3/2/1/132193039/homepage-dining_orig.png\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Main from '../../components/Main';\nimport './dashboard.css';\n\nconst Dashboard = () => {\n  return (\n    <div className=\"dashboard\">\n        <Header />\n        <Main/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './container/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}